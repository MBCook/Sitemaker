These are the contents of the various files and how things works. First is the siteConfig file which is the master configuration file.

Parameters are always in text files in the form of "param - value", one per line.

------------ Example siteConfig.txt ----------------
LocalRoot - /path/to/top/level/dir/of/site
ForceUpdate - False
ForceUpload - False
RemoteBase - /
FtpServer - ftp.whereever.com
FtpBase - remoteRootDir
FtpUser - userName
FtpPass - password
----------------------------------------------------

ForceUpdate forces ever file to be rewritten whether it's contents have changed or not.

ForceUpload does the same thing for uploads.

RemoteBase is the base of your site's URL. So if you site is located at http://www.server.com/joeBob/, then that is your RemoteBase. If you are located at http://www.whereever.com, then your RemoteBase is /.

FtpServer is obvious, as are FtpUser and FtpPass (hope you don't use spaces, I don't know if they'll work)

FtpBase is the remote directory. For example once you connect to your ftp server if all your public HTML files are put in the "htdocs" directory, then you set this to "htdocs".

------------ Example sections.txt ------------------
artwork - Artwork
macland - Adventures in Mac Land
holograms - Holograms
home - Home
links - Links
programming - Programming
books - Books
english - English
about - About Me
auctions - Auctions
want - Things I Want
photos - Photography
-----------------------------------------------------

There is one of these in every directory of your site. It lists the subdirectories that will be processed, and the name of that directory. Each  pair is "dirname - Section Name". Don't worry about order, they are sorted alphabetically. This is used to generate the links on the left side of my pages (although you could put them anywhere).

------------- Example style.txt ---------------------
Style - Blog
Title - Michael Cook's Place
-----------------------------------------------------

You need one of these in every directory that SiteMaker modifies. The style tells it which helper to use to make the pages in that directory. Valid entries are File, Blog, List, and Gallery. Blog is obvious, File just takes each whatever.txt and turns it into a whatever.html file using the template. List is what I use to make my list of things I want (so it is easy to add/remove things), and Gallery makes my photos page.

------------- Example templateBody.txt --------------
<hr />
<p align="center" size="small"><i>###DATE###</i></p>
<p>###TEXT###</p>
<hr />
-----------------------------------------------------

This one is up to you. The content of each page is place into this file, and that is in turn put into the templatePage.txt file. "###DATE###" is replaced with the date, "###TEXT###" is replaced with the text of that page. This must be in the root directory of the site (as I remember, that is where I keep it).

------------- Example templateEntry.txt --------------
<hr />
<h2 align="center">###TITLE###</h2>
<p align="center" style="font-size: small">###DATE###</p>
###TEXT###
<hr />
------------------------------------------------------

Each blog entry's text is put into this (replacing "###TEXT###") along with the title and date (into the respective places). Then all the entries put together are put into the templatePage.

------------- Example templateGallery.txt -----------
<h2 align="center">###GALLERYTITLE###</h2>
<p>###GALLERYTEXT###</p>
<table border="1" align="center">
<th width="180">Thumbnail</th><th>Short Description</th>
###GALLERYENTRIES###
</table>
-----------------------------------------------------

This is how photo galleries are displayed. I think it's pretty obvious what each thing does.

------ Example templateGalleryIndexEntry.txt -----------
<tr>
<td align="center"><a href="###PICPAGE###" border="0"><img src="###PICSOURCE###" alt="###DESCRIPTION###"></td>
<td><a href="###PICPAGE###">###DESCRIPTION###</a></td>
</tr>
-----------------------------------------------------

This is how each entry in a gallery is displayed on the main gallery page. Picpage is replaced with a link to the right page, picsource is replaced with a link to the thumbnail image, description is replaced with a short description.

-------------- Example templateGalleryLarge.txt ---------
<p align="center"><img src="###PICTURELARGE###" alt="###SHORTCOMMENT###"></p>
<hr />
<p>###EXIF###</p>
<hr />
<p>###SHORTCOMMENT###</p>
<hr />
<p>###LONGCOMMENT###</p>
</table>
---------------------------------------------------------

I'm sure you get how this all works by now. Picturelarge is a link to the image, short and long comments come from the files, EXIF is the JPG's EXIF data (or at least it would be if I had that working).

---------- Example templateList_want.txt ---------------
tableStartA, tableStartB, tableStartC, itemLine, itemURLLine, priceSupplierLine, priceSupplierURLLine, categoryRatingLine, needsLine, optionalLine, descriptionLine, tableEndA, tableEndB
<p><hr />
<a name="###LINKNAME###" />
<table border="1">
<tr><th colspan="2">###ITEMNAME###</th></tr>
<tr><th colspan="2"><a href="###ITEMURL###">###ITEMNAME###</a></th></tr>
<tr><td>Price: $###PRICE###</td><td>###SUPPLIERNAME###</td></tr>
<tr><td>Price: $###PRICE###</td><td><a href="###SUPPLIERURL###">###SUPPLIERNAME###</a></td></tr>
<tr><td>Category: ###CATEGORY###</td><td>Rating: ###RATING###%</td></tr>
<tr><td colspan="2">Needs: ###NEEDS###</td></tr>
<tr><td colspan="2">Optional: ###OPTIONAL###</td></tr>
<tr><td colspan="2">###DESCRIPTION###</td></tr>
</table>
<hr />
</p>
--------------------------------------------------------

This one is complex, each thing on the first line corresponds to one of the additional lines, in order. Somewhere in the code this file is named as the "Wanted" template.

--------------- example templatePage.txt ---------------
--------------------------------------------------------

This is the main HTML template. You can make it look like whatever you want. "###TITLE###" will be replaced with the page's title. "###NAV###" will be replaced with the navigation links, and "###BODY###" will be replaced with the page's content.

OTHER STUFF

------------
Title, Date, Content
About Me
20050310
<p>Content</p>
------------

In a File directory, each page you want is named something.txt. That will be turned into something.html. The file starts out with a line that reads the list of parameters that are in the file, just like in the template list. Each parameter is read in as one line, with the last one being all the related lines. So they look like above. The date is in YYYYMMDD format. Blog entries look exactly the same and are put in based on the order of the files alphabetically (I would use YYYYMMDD.txt for your blog entries).

---------------
Short, Long
Short Picture Description
Long Picture Description that can be multi-line
----------

For the photo gallery, there should be three files for each photo you put up. One is the file (whatever.jpg), the second is a thumbnail (which must be named whatever_thumb.jpg) which is optional (I think). The third is a text file describing that picture (called whatever.txt). That looks like the above.

There is also an index.txt file in the directory which contains nothing but the blurb at the top of the gallery page.

That's about it. EVERYTHING that isn't a special file (ending in .txt basically) is uploaded. Everything that ends in .txt gets processed. It runs recursively through directories (which it knows about thanks to the sections.txt file). If you add a new section and your machine and tell it to upload, it will create that new directory on the FTP server for you so you don't have to worry about that.

BUT IT WILL NEVER, EVER DELETE ANYTHING OFF THE SERVER. EVER.

It will overwrite things, but they will never be deleted. So if you put up a section that you remove later, you must remove it by hand. It won't be linked to by the navigation, but the files will all still be up there. This goes for sections, pages, images, whatever. 

SiteMaker is written in Python. To run it, just run:

python /path/to/sitemaker.py [update] [upload]

Update and upload are optional. If you don't include them, it does the default (and I can't remember what that is). You can specify both (but they must be in that order). Update updates all the files on your local hard drive. Upload puts the files on the FTP server. It will give you statistics like "0 files updated, 0 files uploaded" at the end of doing things, and just realize that that doesn't work (it always says 0, I haven't fixed it, it was some weird global variable issue).

YOU MUST RUN THE ABOVE COMMAND FROM THE DIRECTORY THAT HAS siteConfig.txt IN IT. If you don't, it will complain. siteConfig.txt does not have to be in the same directory as your site. When you run it, it will tell you what it is doing. For example, here is what it says on my site if I run it right now:

--------------------------
Beginning processing...
  Entering directory "/Users/michael/Programming/Python/SiteMaker/sandbox/test"...
    Skipping 'index.html', no update needed...
    Entering directory "about"...
      Skipping 'index.html', no update needed...
    Leaving directory "about"...
    Entering directory "artwork"...
      Skipping 'index.html', no update needed...
    Leaving directory "artwork"...
    Entering directory "auctions"...
      Skipping 'shimizu_waves.html', no update needed...
      Skipping 'index.html', no update needed...
      Skipping 'nine_patch.html', no update needed...
      Skipping 'pink_and_blue_quilt.html', no update needed...
      Skipping 'diamond_trellis.html', no update needed...
      Skipping 'dell_insp_8000.html', no update needed...
      Skipping 'chimney_sweep.html', no update needed...
      Skipping 'bk_848.html', no update needed...
      Skipping 'jacket.html', no update needed...
      Skipping 'shimizu_forrest.html', no update needed...
      Skipping 'grandmothers_fan.html', no update needed...
      Skipping 'simcity4.html', no update needed...
      Skipping 'sony_drx500.html', no update needed...
      Skipping 'multi_colored.html', no update needed...
      Skipping 'carpenters_wheel.html', no update needed...
      Skipping 'vest.html', no update needed...
    Leaving directory "auctions"...
    Entering directory "books"...
      Skipping 'index.html', no update needed...
    Leaving directory "books"...
    Entering directory "english"...
      Skipping 'johnson.html', no update needed...
      Skipping 'pope.html', no update needed...
      Skipping 'book.html', no update needed...
      Skipping 'gulliver.html', no update needed...
      Skipping 'index.html', no update needed...
      Skipping 'swift.html', no update needed...
    Leaving directory "english"...
    Entering directory "holograms"...
      Skipping 'links.html', no update needed...
      Skipping 'setup.html', no update needed...
      Skipping 'index.html', no update needed...
      Skipping 'multi.html', no update needed...
      Skipping 'single.html', no update needed...
      Skipping 'how.html', no update needed...
      Skipping 'history.html', no update needed...
    Leaving directory "holograms"...
    Entering directory "links"...
      Skipping 'index.html', no update needed...
    Leaving directory "links"...
    Entering directory "macland"...
      Skipping 'index.html', no update needed...
    Leaving directory "macland"...
    Entering directory "photos"...
      Skipping 'index.html', no update needed...
      Entering directory "2005"...
        Skipping 'index.html', no update needed...
      Leaving directory "2005"...
      Entering directory "2006"...
        Skipping 'index.html', no update needed...
      Leaving directory "2006"...
    Leaving directory "photos"...
    Entering directory "programming"...
      Skipping 'index.html', no update needed...
      Entering directory "cpp"...
        Skipping 'index.html', no update needed...
        Entering directory "zombiecity"...
          Skipping 'index.html', no update needed...
        Leaving directory "zombiecity"...
      Leaving directory "cpp"...
      Entering directory "java"...
        Skipping 'index.html', no update needed...
        Entering directory "pondgame"...
          Skipping 'index.html', no update needed...
        Leaving directory "pondgame"...
        Entering directory "scheduler"...
          Skipping 'index.html', no update needed...
        Leaving directory "scheduler"...
      Leaving directory "java"...
      Entering directory "objectivec"...
        Skipping 'index.html', no update needed...
        Entering directory "siteblogger"...
          Skipping 'index.html', no update needed...
        Leaving directory "siteblogger"...
      Leaving directory "objectivec"...
      Entering directory "python"...
        Skipping 'index.html', no update needed...
        Entering directory "blocks"...
          Skipping 'index.html', no update needed...
        Leaving directory "blocks"...
        Entering directory "ittybittycity"...
          Skipping 'index.html', no update needed...
        Leaving directory "ittybittycity"...
        Entering directory "sitemaker"...
          Skipping 'index.html', no update needed...
        Leaving directory "sitemaker"...
      Leaving directory "python"...
    Leaving directory "programming"...
    Entering directory "want"...
      Skipping 'index.html', no update needed...
    Leaving directory "want"...
  Leaving directory "/Users/michael/Programming/Python/SiteMaker/sandbox/test"...
Done Processing!


0 files were processed, 0 were updated.
This program ran for 0.76 seconds.
--------------------------

Here you can see it move into each directory and update what is needed (hint: here, there were no updates needed). It does something similar on uploading (both can go by quite fast).